{
	"info": {
		"_postman_id": "15680814-f754-493c-acd3-a5e7b944d442",
		"name": "Tasks",
		"description": "## ðŸ‘‹ Introduction\n\nWelcome to the API development workspace. This workspace serves as a single source of truth fcdor vff APIs we build and helps new engineers get onboarded to our team's API landscape faster.\n\n## ðŸš€ Getting started with this workspace\n\n##### **Reference collections**\n\nThese collections contain thorough documentation of our team's APIs. They will help you understand the capabilities of the services we own and how to use them effectively.\n\nAs an example, we've added the **API Documentation** collection. It contains requests and examples to create, read, update and delete collections via an API.\n\nSimilarly, we recommend adding **#reference collections** for your services to this workspace.\n\n##### **Blueprint collections**\n\nThese self-service collections curated by our team will help you observe workflows supported by the services we own. You can directly send requests using these endpoints.\n\nAs an example, we've added the **RESTful API Basics** collection that uses fake-store API to create, read, update and delete products.\n\nSimilarly, we recommend adding **#blueprint collections** for important workflows managed by your team.\n\n##### **Environments**\n\nEnvironments are set up to manage variables like base URLs, API keys, and tokens whose values you can change depending on the context of your work (e.g., development, staging, production).\n\n## ðŸ›Ÿ Help and support\n\nIf you have any questions or suggestions, please don't hesitate to reach out to your manager or any member of the Engineering team.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17759179"
	},
	"item": [
		{
			"name": "Get All Tasks",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/tasks",
					"host": [
						"{{URL}}"
					],
					"path": [
						"tasks"
					]
				},
				"description": "Get all tasks available on the database"
			},
			"response": []
		},
		{
			"name": "Get single task",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/tasks/660740bc2a6d118d18d5f196",
					"host": [
						"{{URL}}"
					],
					"path": [
						"tasks",
						"660740bc2a6d118d18d5f196"
					]
				},
				"description": "Get a task from a collection of tasks using the id parameter"
			},
			"response": []
		},
		{
			"name": "Create task",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"shake and bb\",\r\n    \"completed\":true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/tasks",
					"host": [
						"{{URL}}"
					],
					"path": [
						"tasks"
					]
				},
				"description": "Create a task through passing in the data in the request body"
			},
			"response": []
		},
		{
			"name": "Update tasks",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"Shake and Cook\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/tasks/660740bc2a6d118d18d5f196",
					"host": [
						"{{URL}}"
					],
					"path": [
						"tasks",
						"660740bc2a6d118d18d5f196"
					]
				},
				"description": "Update any required details of a task provided you have its id parameter"
			},
			"response": []
		},
		{
			"name": "Delete task",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{URL}}/tasks/66071a056f9f55b609fee5b5",
					"host": [
						"{{URL}}"
					],
					"path": [
						"tasks",
						"66071a056f9f55b609fee5b5"
					]
				},
				"description": "Delete the task to which the particular id parameter belongs"
			},
			"response": []
		}
	]
}